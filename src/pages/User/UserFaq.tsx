import React, { useState } from 'react';
import { ScrollView, View, Text, TouchableOpacity, StyleSheet, TextInput, Alert, ActivityIndicator, KeyboardAvoidingView, Platform, Button, Share, Linking } from 'react-native';
import { SafeAreaView } from 'react-native-safe-area-context';
import { sendEmailContato } from '@/services/users';
import { Ionicons } from '@expo/vector-icons';
import FontAwesome from '@expo/vector-icons/FontAwesome';
import { COLORS } from '@/constants';
import { useNavigation, NavigationProp } from '@react-navigation/native';
import { RootStackParamList } from '@/types';
import { ButtonBack } from '@/components/ButtonBack';

const faqList = [
  {
    question: "Como fa√ßo para usar um cupom?",
    answer: "Acesse a aba 'Meus Cupons', escolha o cupom que deseja usar e toque em 'Usar Cupom'. Mostre o QR Code ao atendente da loja, ou informe o c√≥digo do cupom para validar o uso."
  },
  {
    question: "O que acontece se o cupom vencer?",
    answer: "Cada cupom tem uma data de validade (ex.: 1 dia, 24 horas, ou conforme definido pela loja). Ap√≥s o vencimento, o cupom perde a validade automaticamente e n√£o pode ser reativado."
  },
  {
    question: "Posso usar o mesmo cupom mais de uma vez?",
    answer: "N√£o. Cada cupom √© √∫nico e pessoal ‚Äî ap√≥s o uso, seu status muda para 'Usado' e ele n√£o pode ser reutilizado."
  },
  {
    question: "Onde encontro as regras de uso de cada cupom?",
    answer: "As regras espec√≠ficas ficam vis√≠veis na p√°gina de detalhes do cupom, na p√°gina de uso (junto ao QR Code) ou em 'Meus Cupons', dentro das informa√ß√µes do cupom."
  },
  {
    question: "Como encontro cupons de lojas da minha cidade?",
    answer: "Use a aba 'Buscar' na barra inferior do app. Voc√™ pode pesquisar por nome da loja, categoria (Restaurantes, Cal√ßados, Vestu√°rio etc.) ou aplicar filtros por tipo de oferta."
  },
  {
    question: "Posso seguir uma loja espec√≠fica?",
    answer: "Sim! Voc√™ pode seguir suas lojas favoritas e receber notifica√ß√µes sobre novas campanhas e atualiza√ß√µes de cupons."
  },
  {
    question: "Onde vejo informa√ß√µes da loja (WhatsApp, endere√ßo etc.)?",
    answer: "Esses dados est√£o dispon√≠veis na p√°gina de detalhes do cupom, na p√°gina de uso do cupom ou atrav√©s da aba 'Meus Cupons'."
  },
  {
    question: "Como altero meus dados de cadastro ou senha?",
    answer: "Acesse 'Meu Perfil' ‚Üí 'Meus Dados' ou 'Alterar Senha'. L√° voc√™ pode atualizar informa√ß√µes pessoais, senha e outros dados do seu cadastro."
  },
  {
    question: "Como entro em contato com o suporte?",
    answer: "V√° em 'Meu Perfil' ‚Üí 'Ajuda e FAQ'. Voc√™ encontrar√° um formul√°rio de contato para envio direto de mensagens √† equipe de suporte."
  },
  {
    question: "Posso transferir um cupom para outra pessoa?",
    answer: "N√£o. Os cupons s√£o pessoais e intransfer√≠veis, vinculados √† sua conta de usu√°rio."
  },
  {
    question: "O que fazer se o QR Code n√£o funcionar na loja?",
    answer: "Informe o c√≥digo do cupom (mostrado logo abaixo do QR Code). O lojista pode validar manualmente pelo app 'QueroDesconto Parceiros'."
  }
];

export default function FaqScreen() {
  const navigation = useNavigation<NavigationProp<RootStackParamList>>();
  const [openIndex, setOpenIndex] = useState<number | null>(null);

  // Formul√°rio de contato
  const [nome, setNome] = useState('');
  const [email, setEmail] = useState('');
  const [mensagem, setMensagem] = useState('');
  const [enviando, setEnviando] = useState(false);
  const [enviado, setEnviado] = useState(false);

  const handleToggle = (idx: number) => {
    setOpenIndex(openIndex === idx ? null : idx);
  };

  const handleEnviarContato = async () => {
    if (!nome.trim() || !email.trim() || !mensagem.trim()) {
      Alert.alert('Erro', 'Preencha todos os campos.');
      return;
    }
    // Valida√ß√£o simples de email
    if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
      Alert.alert('Erro', 'E-mail inv√°lido.');
      return;
    }
    setEnviando(true);
    setEnviado(false);
    try {
      await sendEmailContato({ name: nome, email, message: mensagem });
      setEnviado(true);
      setNome('');
      setEmail('');
      setMensagem('');
    } catch (e) {
      Alert.alert('Erro', 'N√£o foi poss√≠vel enviar sua mensagem. Tente novamente.');
    } finally {
      setEnviando(false);
    }
  };

  const handleAbreLink = async (link: string, code: string) => {
    try {

      if (!link || typeof link !== 'string') {
        Alert.alert('Erro', 'Link de resgate inv√°lido ou n√£o fornecido');
        return;
      }

      const fullUrl = link + encodeURIComponent('QueroDesconto - Quero usar meu Cupom - c√≥digo: ' + code);

      // Para WhatsApp, tente abrir diretamente sem verificar canOpenURL
      if (link.includes('wa.me') || link.includes('whatsapp')) {
        try {
          await Linking.openURL(fullUrl);
        } catch (error) {
          // Se falhar, tente abrir no navegador
          const webUrl = fullUrl.replace('wa.me', 'web.whatsapp.com/send');
          await Linking.openURL(webUrl);
        }
      } else {
        // Para outros links, fa√ßa a verifica√ß√£o normal
        const canOpen = await Linking.canOpenURL(link);

        if (canOpen) {
          await Linking.openURL(link);
        } else {
          Alert.alert(
            'Erro',
            `N√£o foi poss√≠vel abrir o link de resgate.\nURL: ${link}\nVerifique se o aplicativo necess√°rio est√° instalado.`
          );
        }
      }
    } catch (error) {
      console.error('Erro ao abrir link de resgate:', error);
      Alert.alert(
        'Erro',
        `Erro ao abrir link de resgate: ${error instanceof Error ? error.message : 'Erro desconhecido'}`
      );
    }
  };

  const handleShare = async () => {
    try {
      const shareMessage = 'Confira as d√∫vidas frequentes do GCamp!';
      const shareUrl = 'https://gchamps.com/faq'; // URL do FAQ

      await Share.share(
        {
          title: 'GCamp FAQ',
          message: shareMessage,
          url: shareUrl,
        },
        {
          // This makes the share dialog better on iOS
          dialogTitle: 'Compartilhar FAQ do GCamp',
          subject: 'FAQ do GCamp'
        }
      );
    } catch (error) {
      console.error(error);
    }
  };

  return (
    <SafeAreaView style={styles.container}>
      <ButtonBack goTo={'back'} />
      <KeyboardAvoidingView
        style={{ flex: 1 }}
        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}
        keyboardVerticalOffset={Platform.OS === 'ios' ? 60 : 0}
      >
        <ScrollView contentContainerStyle={styles.scroll} keyboardShouldPersistTaps="handled">

          {/* =================================================== Vers√£o do App */}
          <Text style={{ fontStyle: 'italic' }}>Vers√£o 1.0.0</Text>
          <Text style={{ fontSize: 16, color: '#333', marginBottom: 24 }}>
            Bem-vindo ao Quero Desconto! Aqui voc√™ as melhores lojas da cidade com os melhores descontos pra voc√™
            Navegue pelas FAQs para esclarecer suas d√∫vidas ou entre em contato com nosso suporte.
          </Text>
          <Text>
            O QueroDesconto conecta voc√™ √†s melhores ofertas e cupons de desconto do com√©rcio local ‚Äî tudo em um s√≥ lugar.
            Basta escolher uma loja, pegar seu cupom e economizar!{'\n'}{'\n'}

            üí° √â simples:{'\n'}{'\n'}

            1. Baixe o app QueroDesconto e fa√ßa seu cadastro gratuito.{'\n'}{'\n'}

            2. Explore as campanhas ativas das lojas da sua cidade e escolha o cupom que desejar.{'\n'}{'\n'}

            3. Guarde seu cupom na aba Meus Cupons ‚Äî ele ficar√° dispon√≠vel at√© o fim do prazo de validade.{'\n'}{'\n'}

            4. Use o cupom na loja f√≠sica: apresente o QR Code (ou informe o c√≥digo do cupom) ao atendente.{'\n'}{'\n'}

            5. O lojista valida o uso no app QueroDesconto Parceiros, e pronto ‚Äî voc√™ garante seu desconto! üéâ{'\n'}{'\n'}

            ‚ö†Ô∏è Importante:{'\n'}{'\n'}

            Cada cupom tem prazo de validade ‚Äî se expirar, n√£o poder√° ser utilizado.{'\n'}

            As regras de uso s√£o definidas pela loja e podem variar conforme o tipo de desconto.
          </Text>

          <View>
            <Text style={styles.title}>Fa√ßa parte da nossa comunidade:</Text>
            <Text>Siga-nos nas redes sociais para ficar por dentro das novidades!</Text>
            <View style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center', gap: 24, marginVertical: 16 }}>
              <View>
                <Text style={{ fontWeight: 'bold' }}>Instagram:</Text>
                <TouchableOpacity onPress={() => handleAbreLink('https://instagram.com/gcamp.app', 'INSTAGRAM')}>
                  <Ionicons name="logo-instagram" size={60} color={COLORS.primary} />
                </TouchableOpacity>
              </View>
              <View>
                <Text style={{ fontWeight: 'bold' }}>WhatsApp:</Text>
                <TouchableOpacity onPress={() => handleAbreLink('https://t.me/gcampapp', 'WHATSAPP')}>
                  <FontAwesome name="whatsapp" size={60} color={COLORS.primary} />
                </TouchableOpacity>
              </View>
            </View>

          </View>
          <Text style={styles.title}>FAQ & Suporte</Text>
          {faqList.map((item, idx) => (
            <View key={idx} style={styles.faqItem}>
              <TouchableOpacity onPress={() => handleToggle(idx)} style={styles.questionButton}>
                <Text style={styles.questionText}>{item.question}</Text>
              </TouchableOpacity>
              {openIndex === idx && (
                <View style={styles.answerBox}>
                  <Text style={styles.answerText}>{item.answer}</Text>
                </View>
              )}
            </View>
          ))}
          <View style={{ height: 40 }} />
          {/* =================================================== Rodap√© com Contato */}
          <Text style={{ fontSize: 16, color: '#333', marginBottom: 16 }}>
            Se voc√™ tiver mais perguntas ou precisar de ajuda, entre em contato conosco:
          </Text>

          {/* Formul√°rio de contato */}
          <View style={styles.formContato}>
            <Text style={styles.formTitle}>Formul√°rio de Contato e Suporte</Text>
            <TextInput
              style={styles.input}
              placeholder="Nome"
              value={nome}
              onChangeText={setNome}
              editable={!enviando}
            />
            <TextInput
              style={styles.input}
              placeholder="E-mail"
              value={email}
              onChangeText={setEmail}
              keyboardType="email-address"
              autoCapitalize="none"
              editable={!enviando}
            />
            <TextInput
              style={[styles.input, { minHeight: 80, textAlignVertical: 'top' }]}
              placeholder="Mensagem"
              value={mensagem}
              onChangeText={setMensagem}
              multiline
              editable={!enviando}
            />
            <TouchableOpacity
              onPress={handleEnviarContato}
              style={{
                backgroundColor: enviando ? '#FFA94D' : COLORS.primary,
                padding: 14,
                borderRadius: 8,
                alignItems: 'center',
                marginTop: 8,
              }}
              disabled={enviando}
            >
              {enviando ? (
                <ActivityIndicator color="#FFF" />
              ) : (
                <Text style={{ color: '#FFF', fontWeight: 'bold', fontSize: 16 }}>Enviar Mensagem</Text>
              )}
            </TouchableOpacity>
            {enviado && (
              <Text style={{ color: 'green', marginTop: 10, textAlign: 'center' }}>
                Mensagem enviada com sucesso! Em breve entraremos em contato.
              </Text>
            )}
          </View>
          <Text style={{ fontSize: 14, color: '#666', marginTop: 12, alignItems: 'center', textAlign: 'center' }}>
            Ou fale conosco pelo <Ionicons name="logo-instagram" size={24} color="black" /> Instagram: <Text style={{ color: COLORS.primary, fontWeight: 'bold' }}>@gcamp.app</Text>
          </Text>
        </ScrollView>
      </KeyboardAvoidingView>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1, backgroundColor: '#FFF', paddingTop: Platform.OS === 'ios' ? 60 : 40 },
  scroll: { padding: 24, paddingBottom: 100 },
  title: {
    fontSize: 22,
    fontWeight: 'bold',
    color: COLORS.primary,
    marginVertical: 24,
    textAlign: 'center',
  },
  faqItem: {
    marginBottom: 16,
    borderBottomWidth: 1,
    borderBottomColor: '#eee',
    paddingBottom: 8,
  },
  questionButton: {
    padding: 8,
  },
  questionText: {
    fontSize: 16,
    color: '#8B4513',
    fontWeight: 'bold',
  },
  answerBox: {
    backgroundColor: '#FFF8E1',
    borderRadius: 6,
    padding: 10,
    marginTop: 4,
  },
  answerText: {
    fontSize: 15,
    color: '#333',
  },
  formContato: {
    backgroundColor: '#FFF8E1',
    borderRadius: 8,
    padding: 16,
    marginBottom: 24,
    marginTop: 8,
    elevation: 1,
  },
  formTitle: {
    fontSize: 17,
    fontWeight: 'bold',
    color: '#8B4513',
    marginBottom: 12,
    textAlign: 'center',
  },
  input: {
    borderWidth: 1,
    borderColor: COLORS.primary,
    borderRadius: 8,
    padding: 12,
    marginBottom: 10,
    fontSize: 15,
    backgroundColor: '#FFF',
    color: '#333',
  },
});
